import java.util.Scanner;  
class Stock 
{  
    private String symbol;  
    private String name;  
    private double price;  
    public Stock(String symbol, String name, double price) 
    {  
        this.symbol = symbol;  
        this.name = name;  
        this.price = price;  
    }  
    public String getSymbol() 
    {  
        return symbol;  
    }  
    public String getName() 
    {  
        return name;  
    }  
    public double getPrice() 
    {  
        return price;  
    }  
    @Override  
    public String toString() 
    {  
        return name + " (" + symbol + ") - $" + price;  
    }  
}  
class Portfolio 
{  
    private String[] ownedStocks;  
    private int[] ownedQuantity;  
    private int count;  
    public Portfolio(int size) 
    {  
        ownedStocks = new String[size];  
        ownedQuantity = new int[size];  
        count = 0;  
    }  
    public void buyStock(String symbol, int quantity, double price) 
    {  
        boolean exists = false;  
        for (int i = 0; i < count; i++) 
        {  
            if (ownedStocks[i].equals(symbol)) 
            {  
                ownedQuantity[i] += quantity;  
                exists = true;  
                break;  
            }  
        }  
        if (!exists) 
        {  
            ownedStocks[count] = symbol;  
            ownedQuantity[count] = quantity;  
            count++;  
        }  
        System.out.println("Bought " + quantity + " shares of " + symbol + " at $" + price + " each.");  
    }  
    public void sellStock(String symbol, int quantity) 
    {  
        for (int i = 0; i < count; i++) 
        {  
            if (ownedStocks[i].equals(symbol)) 
            {  
                if (ownedQuantity[i] < quantity) 
                {  
                    System.out.println("Not enough shares of " + symbol + " to sell.");  
                } 
                else 
                {  
                    ownedQuantity[i] -= quantity;  
                    System.out.println("Sold " + quantity + " shares of " + symbol + ".");  
                }  
                return;  
            }  
        }  
        System.out.println("You don't own any shares of " + symbol + ".");  
    }  
    public void printPortfolio(Stock[] marketData) 
    {  
        System.out.println("Your Portfolio:");  
        for (int i = 0; i < count; i++) 
        {  
            System.out.println(ownedStocks[i] + ": " + ownedQuantity[i] + " shares");  
        }  
        double totalValue = calculateTotalValue(marketData);  
        System.out.println("Total Portfolio Value: $" + totalValue);  
    }  
    private double calculateTotalValue(Stock[] marketData) 
    {  
        double totalValue = 0;  
        for (int i = 0; i < count; i++) 
        {  
            for (Stock stock : marketData) 
            {  
                if (stock.getSymbol().equals(ownedStocks[i])) 
                {  
                    totalValue += stock.getPrice() * ownedQuantity[i];  
                }  
            }  
        }  
        return totalValue;  
    }  
}  
public class StockTradingPlatform 
{  
    private static Stock[] marketData = new Stock[3];  
    private static Portfolio portfolio = new Portfolio(10); 
    public static void main(String[] args) 
    {  
        Scanner scanner = new Scanner(System.in);  
        marketData[0] = new Stock("AAPL", "Apple Inc.", 150.00);  
        marketData[1] = new Stock("GOOG", "Alphabet Inc.", 2800.00);  
        marketData[2] = new Stock("AMZN", "Amazon.com, Inc.", 3400.00); 
        while (true) 
        {  
            System.out.println("\nWelcome to the Stock Trading Platform!");  
            System.out.println("1. View Market Data");  
            System.out.println("2. Buy Stock");  
            System.out.println("3. Sell Stock");  
            System.out.println("4. Check Portfolio");  
            System.out.println("5. Exit");  
            System.out.print("Choose an option: ");  
            int choice = scanner.nextInt();  
            scanner.nextLine();
            switch (choice) 
            {  
                case 1:  
                    System.out.println("Market Data:");  
                    for (Stock stock : marketData) 
                    {  
                        System.out.println(stock);  
                    }  
                    break;  
                case 2:  
                    System.out.print("Enter stock symbol to buy: ");  
                    String buySymbol = scanner.nextLine().toUpperCase();  
                    System.out.print("Enter quantity to buy: ");  
                    int buyQuantity = scanner.nextInt(); 
                    boolean stockFound = false;  
                    for (Stock stock : marketData) 
                    {  
                        if (stock.getSymbol().equals(buySymbol)) 
                        {  
                            stockFound = true;  
                            portfolio.buyStock(buySymbol, buyQuantity, stock.getPrice());  
                            break;  
                        }  
                    }  
                    if (!stockFound) 
                    {  
                        System.out.println("Stock not found!");  
                    }  
                    break;  
                case 3:  
                    System.out.print("Enter stock symbol to sell: ");  
                    String sellSymbol = scanner.nextLine().toUpperCase();  
                    System.out.print("Enter quantity to sell: ");  
                    int sellQuantity = scanner.nextInt(); 
                    portfolio.sellStock(sellSymbol, sellQuantity);  
                    break;  
                case 4:  
                    portfolio.printPortfolio(marketData);  
                    break;  
                case 5:  
                    System.out.println("Exiting the platform. Thank you!");  
                    scanner.close();  
                    return;  
                default:  
                    System.out.println("Invalid option. Please try again.");  
            }  
        }  
    }  
}
